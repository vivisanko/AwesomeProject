{"version":3,"sources":["components/icons/avocado.svg","components/icons/tomato.svg","constants.js","components/head-helmet/head-helmet.jsx","components/main/main.jsx","pages/home/home.jsx","hocs/with-core-component.jsx","core/consignment-tomato-avocado/consignment-tomato-avocado.jsx","components/products/products.jsx","components/consignment-tomato-avocado/consignment-tomato-avocado.jsx","core/consignment-who-you-are/consignment-who-you-are.jsx","components/consignment-who-you-are/input-block/input-block.jsx","components/consignment-who-you-are/consignment-who-you-are.jsx","pages/page-not-found/page-not-found.jsx","routes.js","pages/game-tomato-avocado/game-tomato-avocado.jsx","pages/game-who-you-are/game-who-you-are.jsx","app.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","PAGE_NAMES","HOME","GAME_TOMATO_AVOCADO","GAME_WHO_YOU_ARE","PAGE_NOT_FOUND","STEPS","START","ACT","PLAY","END","TYPES","GENERAL","ADDITIONAL","FINAL","PRODUCTS","TOMATO","AVOCADO","BEET","CHILLI","REDISH","LYCHEE","POMEGRANATE","CELERY","CUCUMBER","BROCCOLI","KIWI","PEAS","LIKE_PRODUCT_COLOR","ACTION_MESSAGES","NOT_ENOUGH_PLAYERS","WAIT_START","ASK","ANSWER","WAIT","APPLE_TOUCH_ICON_SIZES","ICON_SIZES","metaInfoDefault","title","description","keywords","canonical","currentUrl","pageType","image","META_INFO_MAPPING","DEFAULT","HeadHelmet","page","metaInfo","console","log","key","name","content","rel","href","map","size","sizes","type","defaultProps","Main","className","children","classNames","Home","Button","to","outline","tag","Link","withCoreComponent","CoreComponent","InnerComponent","WrappedComponent","coreProps","restProps","coreComponentProps","ConsignmentTomatoAvocadoCore","state","score","productName","endDate","generateName","Math","round","random","floor","length","handleClick","currentTarget","dataset","newProductName","setState","prevState","R","this","Date","now","props","isDisabled","Component","Products","isWithTitle","data-name","tabIndex","role","onClick","onKeyPress","disabled","src","avocado","alt","tomato","COUNTDOWN_CLASSES","countdownRenderer","minutes","seconds","ConsignmentTomatoAvocado","date","renderer","ConsignmentWhoYouAreCore","step","theme","opponentName","numberOfPlayers","actions","playStory","isActive","isShowYoNButtons","question","winners","personPlace","handleChange","event","item","target","value","handleButtonClick","subject","next","message","concat","person","timestamp","newMessage","createPlayStory","reverse","createStepMessage","changeStateAccordingServerMessage","serverMsg","newPlayStory","JSON","parse","placeRating","webSocket","url","deserializer","data","subscribe","msg","err","complete","InputBlock","isStepAct","inputValue","inputName","handleInputChange","onButtonClick","htmlFor","onChange","ConsignmentWhoYouAre","index","moment","format","el","ind","PageNotFound","routes","path","exact","component","noFooter","App","renderRoutes","Boolean","window","location","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2fc6facb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avocado.ee41395b.svg\";","module.exports = __webpack_public_path__ + \"static/media/tomato.574976c1.svg\";","const GAMES = {\n  TOMATO_AVOCADO: 'game-tomato-avocado',\n  WHO_YOU_ARE: 'game-who-you-are'\n}\n\nexport const PAGE_NAMES = {\n  HOME: 'home',\n  GAME_TOMATO_AVOCADO: GAMES.TOMATO_AVOCADO,\n  GAME_WHO_YOU_ARE: GAMES.WHO_YOU_ARE,\n  PAGE_NOT_FOUND: 'page-not-found'\n};\n\nexport const STEPS = {\n  START: 0,\n  ACT: 1,\n  PLAY: 2,\n  END: 3,\n}\n\nexport const TYPES = {\n  GENERAL: 'general',\n  ADDITIONAL: 'additional',\n  FINAL: 'final'\n}\n\n\nexport const PRODUCTS = {\n  TOMATO: 'tomato',\n  AVOCADO: 'avocado',\n  BEET: 'beet',\n  CHILLI: 'chilli',\n  REDISH: 'redish',\n  LYCHEE: 'lychee',\n  POMEGRANATE: 'pomegranate',\n  CELERY: 'celery',\n  CUCUMBER: 'cucumber',\n  BROCCOLI: 'broccoli',\n  KIWI: 'kiwi',\n  PEAS: 'peas'\n};\nconst { TOMATO, AVOCADO, BEET, CHILLI, REDISH, LYCHEE, POMEGRANATE, CELERY, CUCUMBER, BROCCOLI, KIWI, PEAS } = PRODUCTS;\n\nexport const LIKE_PRODUCT_COLOR = {\n  [TOMATO]: [TOMATO, BEET, CHILLI, REDISH, LYCHEE, POMEGRANATE],\n  [AVOCADO]: [AVOCADO, CELERY, CUCUMBER, BROCCOLI, KIWI, PEAS]\n};\n\nexport const PLAY_TIME = 30000;\n\nexport const ACTION_MESSAGES = {\n  NOT_ENOUGH_PLAYERS: 'you need at least two players to play',\n  START: 'if all the players in the assembly start the game',\n  WAIT_START: 'wait, everybody should come up with nicknames',\n  ASK: 'you can ask',\n  ANSWER: 'answer the question',\n  WAIT: '...wait'\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet-async';\nimport { PAGE_NAMES } from '../../constants';\n\nconst { HOME, GAME_TOMATO_AVOCADO, GAME_WHO_YOU_ARE, PAGE_NOT_FOUND } = PAGE_NAMES;\n\nconst APPLE_TOUCH_ICON_SIZES = [\n  '57x57',\n  '60x60',\n  '72x72',\n  '76x76',\n  '114x114',\n  '120x120',\n  '144x144',\n  '152x152',\n  '180x180'\n];\n\nconst ICON_SIZES = ['32x32', '96x96', '16x16'];\n\nconst metaInfoDefault = {\n  title: 'Awesome products',\n  description: 'Guess who you are and develop cognitive abilities with avocado and tomato',\n  keywords: 'brain, cognitive abilities, Stroop effect',\n  canonical: 'https://vivisanko.github.io/AwesomeProject/',\n  currentUrl: '',\n  pageType: 'website',\n  image: 'carrot/'\n};\n\nconst metaInfoGameTomatoAvocado = {\n  title: 'Awesome game tomato avocado',\n  description: 'In this game you match vegetables and fruits to color',\n  keywords: 'play, tomato, avocado',\n  canonical: '',\n  image: 'avocado/'\n};\n\nconst metaInfoGameWhoYouAre = {\n  title: 'Awesome game who you are',\n  description: 'Guess who you are. Ask questions that can be answered “yes” or “no” to understand what nickname your opponent came up with for you',\n  keywords: 'play, who you are',\n};\n\nconst metaInfoNotFoundPage = {\n  title: 'Not found page in awesome products',\n  description: 'go to main page',\n  keywords: 'tomato, avocado, not found, ',\n  canonical: '',\n  currentUrl: '',\n  pageType: 'website',\n  image: 'tomato/'\n};\n\nconst META_INFO_MAPPING = {\n  DEFAULT: metaInfoDefault,\n  [HOME]: metaInfoDefault,\n  [GAME_TOMATO_AVOCADO]: metaInfoGameTomatoAvocado,\n  [GAME_WHO_YOU_ARE]: metaInfoGameWhoYouAre,\n  [PAGE_NOT_FOUND]: metaInfoNotFoundPage\n};\n\nexport const HeadHelmet = ({ page }) => {\n  const metaInfo = META_INFO_MAPPING[page] ? { ...metaInfoDefault, ...META_INFO_MAPPING[page] } : metaInfoDefault;\n\n  const { title, description, keywords, canonical, image } = metaInfo;\n  console.log('metaInfo', metaInfo);\n\n\n  return (\n    <Helmet>\n      <title key=\"title\">{title}</title>,\n      <meta key=\"description\" name=\"description\" content={description} />\n      <meta key=\"keywords\" name=\"keywords\" content={keywords} />\n      <link rel=\"shortcut icon\" href={`./${image}favicon.ico`}></link>\n      {APPLE_TOUCH_ICON_SIZES.map(size => (\n        <link key={size} rel=\"apple-touch-icon\" sizes={size} href={`./${image}apple-icon-${size}.png`} />\n      ))}\n      <link rel=\"icon\" type=\"image/png\" sizes=\"192x192\" href={`./${image}android-icon-192x192.png`} />\n      {ICON_SIZES.map(size => (\n        <link key={size} rel=\"icon\" type=\"image/png\" sizes={size} href={`./${image}favicon-${size}.png`} />\n      ))}\n      <link rel=\"manifest\" href=\"/manifest.json\" />\n      <meta name=\"msapplication-TileColor\" content=\"#ffffff\" />\n      <meta name=\"msapplication-TileImage\" content={`./${image}ms-icon-144x144.png`} />\n      <meta name=\"theme-color\" content=\"#ffffff\" />\n      {canonical && <link rel=\"canonical\" href={canonical} />}\n    </Helmet>\n  );\n};\n\nHeadHelmet.propTypes = {\n  page: PropTypes.string\n};\nHeadHelmet.defaultProps = {\n  page: 'DEFAULT'\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const Main = ({ className, children }) => (\n  <main className={classNames('app-content d-flex align-items-center', className)}>{children}</main>\n);\n\nMain.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired\n};\n\nMain.defaultProps = {\n  className: ''\n};\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'reactstrap';\nimport { HeadHelmet } from '../../components/head-helmet/head-helmet';\nimport { Main } from '../../components/main/main';\nimport { PAGE_NAMES } from '../../constants';\n\n// import { Products } from '../../components/products/products';\n\nimport './home.scss';\n\nexport const Home = () => (\n  <Fragment>\n    <HeadHelmet page={PAGE_NAMES.HOME}/>\n\n    <Main key=\"tomato-avocado\" className=\"home flex-column justify-content-center\">\n      <div className=\"text-white px-4\">Match vegetables and fruits to color, pay attention!</div>\n      <Button className=\"app-button my-4\" to=\"/game-tomato-avocado\" outline tag={Link}>\n        Start\n      </Button>\n    </Main>\n    <div className=\"home home-dark text-yellowgreen d-flex flex-grow-1 justify-content-center align-items-center\">\n        Choose game for you\n        </div>\n    <Main key=\"who-you-are\" className=\"home flex-column justify-content-center\">\n      <div className=\"text-white px-4\">Guess who you are. Ask questions that can be answered “yes” or “no” to understand what nickname your opponent came up with for you</div>\n      <Button className=\"app-button my-4\" to=\"/game-who-you-are\" outline tag={Link}>\n        Start\n      </Button>\n    </Main>\n\n    {/* <Products>\n      <div className=\"mx-1\">Choose</div>\n    </Products> */}\n  </Fragment>\n);\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const withCoreComponent = (CoreComponent, InnerComponent) => {\n  const WrappedComponent = ({ coreProps, ...restProps }) => (\n    <CoreComponent {...coreProps} {...InnerComponent.coreProps}>\n      {coreComponentProps => <InnerComponent {...coreComponentProps} {...restProps} />}\n    </CoreComponent>\n  );\n\n  WrappedComponent.propTypes = {\n    coreProps: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.objectOf(PropTypes.any),\n      PropTypes.arrayOf(PropTypes.any),\n      PropTypes.objectOf(PropTypes.shape(PropTypes.any))\n    ])\n  };\n\n  WrappedComponent.defaultProps = {\n    coreProps: {}\n  };\n  return WrappedComponent;\n};\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as R from 'ramda';\nimport { PRODUCTS, LIKE_PRODUCT_COLOR, PLAY_TIME } from '../../constants';\n\nconst { AVOCADO, TOMATO } = PRODUCTS;\n\nexport class ConsignmentTomatoAvocadoCore extends Component {\n  static propTypes = {\n    children: PropTypes.func.isRequired\n  };\n\n  state = {\n    score: 0,\n    productName: '',\n    endDate: 0\n  };\n\n  componentDidMount() {\n    const productName = this.generateName();\n    this.setState({ endDate: Date.now() + PLAY_TIME, productName });\n  }\n\n  generateName = () =>\n    Math.round(Math.random())\n      ? LIKE_PRODUCT_COLOR[TOMATO][Math.floor(Math.random() * LIKE_PRODUCT_COLOR[TOMATO].length)]\n      : LIKE_PRODUCT_COLOR[AVOCADO][Math.floor(Math.random() * LIKE_PRODUCT_COLOR[AVOCADO].length)];\n\n  handleClick = ({\n    currentTarget: {\n      dataset: { name }\n    }\n  }) => {\n    const { productName } = this.state;\n    const newProductName = this.generateName();\n\n    this.setState(prevState => ({\n      score: R.includes(productName, LIKE_PRODUCT_COLOR[name]) ? ++prevState.score : 0,\n      productName: newProductName\n    }));\n  };\n\n  render() {\n    const { endDate, productName, score } = this.state;\n    const { children } = this.props;\n    const { handleClick } = this;\n    return children({\n      endDate,\n      productName,\n      score,\n      handleClick,\n      isDisabled: Date.now() > endDate\n    });\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport avocado from '../../components/icons/avocado.svg';\nimport tomato from '../../components/icons/tomato.svg';\nimport { PRODUCTS } from '../../constants';\n\nimport './products.scss';\n\nconst { TOMATO, AVOCADO } = PRODUCTS;\n\nexport const Products = ({ children, handleClick, isDisabled, isWithTitle }) => (\n  <div className=\"products flex-fill\">\n    <div\n      className={classNames(\n        'products-container d-flex justify-content-around align-items-center w-100 position-relative',\n        { 'bottom-products-padding': isWithTitle }\n      )}\n    >\n      <div\n        className=\"position-relative\"\n        data-name={AVOCADO}\n        tabIndex=\"0\"\n        role=\"button\"\n        onClick={handleClick}\n        onKeyPress={handleClick}\n        disabled={isDisabled}\n      >\n        <div className=\"image-container py-2 px-1 d-flex flex-column\">\n          {isWithTitle && <div className=\"app-link-tomato products-title app-title pb-2 pb-sm-4 \">green</div>}\n          <img src={avocado} className=\"app-logo\" alt=\"avocado\" />\n        </div>\n      </div>\n      <div className=\"products-child my-2\">{children}</div>\n      <div\n        className=\"position-relative\"\n        data-name={TOMATO}\n        tabIndex=\"0\"\n        role=\"button\"\n        onClick={handleClick}\n        onKeyPress={handleClick}\n        disabled={isDisabled}\n      >\n        <div className=\"image-container py-2 px-1 d-flex flex-column\">\n          {isWithTitle && <div className=\"app-link-yellowgreen products-title app-title pb-2 pb-sm-4\">red</div>}\n          <img src={tomato} className=\"app-logo\" alt=\"tomato\" />\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nProducts.propTypes = {\n  children: PropTypes.node,\n  handleClick: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  isWithTitle: PropTypes.bool\n};\n\nProducts.defaultProps = {\n  children: <div />,\n  handleClick: null,\n  isDisabled: false,\n  isWithTitle: false\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport Countdown from 'react-countdown-now';\nimport { withCoreComponent } from '../../hocs/with-core-component';\nimport { ConsignmentTomatoAvocadoCore } from '../../core/consignment-tomato-avocado/consignment-tomato-avocado';\nimport { Products } from '../products/products';\nimport { Main } from '../main/main';\n\nimport './consignment-tomato-avocado.scss';\n\nconst COUNTDOWN_CLASSES = 'box d-flex justify-content-center align-items-center rounded mx-1';\n\nconst countdownRenderer = ({ minutes, seconds }) => (\n  <div className=\"d-flex align-items-center m-1 countdown\">\n    <div className={COUNTDOWN_CLASSES}>{minutes}</div>:<div className={COUNTDOWN_CLASSES}>{seconds}</div>\n  </div>\n);\n\ncountdownRenderer.propTypes = {\n  minutes: PropTypes.string.isRequired,\n  seconds: PropTypes.string.isRequired\n};\n\nconst ConsignmentTomatoAvocadoUI = ({ endDate, productName, score, handleClick, isDisabled }) => (\n  <Fragment>\n    <Main\n      className={classNames('bg-tomato flex-column justify-content-between', {\n        'bg-yellowgreen': Math.round(Math.random())\n      })}\n    >\n      <Link className=\"text-white\" to=\"/\">\n        go home\n      </Link>\n      <div className=\"align-items-center d-flex flex-grow-1 app-title\">{productName}</div>\n      <div>match object to its color</div>\n    </Main>\n    <div className=\"score-box position-absolute d-flex justify-content-center align-items-center rounded mt-2 mr-2 text-white\">\n      {score}\n    </div>\n    <Products handleClick={handleClick} isDisabled={isDisabled} isWithTitle={true}>\n      <Countdown date={endDate} renderer={countdownRenderer} />\n    </Products>\n  </Fragment>\n);\n\nConsignmentTomatoAvocadoUI.propTypes = {\n  endDate: PropTypes.number.isRequired,\n  productName: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  isDisabled: PropTypes.bool.isRequired\n};\n\nexport const ConsignmentTomatoAvocado = withCoreComponent(ConsignmentTomatoAvocadoCore, ConsignmentTomatoAvocadoUI);\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as R from 'ramda';\nimport { STEPS, TYPES, ACTION_MESSAGES } from '../../constants';\nimport { webSocket } from \"rxjs/webSocket\";\n\nexport class ConsignmentWhoYouAreCore extends Component {\n  subject;\n\n  static propTypes = {\n    children: PropTypes.func.isRequired\n  };\n\n  state = {\n    step: STEPS.START,\n    theme: '',\n    opponentName: '',\n    numberOfPlayers: 0,\n    actions: '',\n    playStory: [],\n    isActive: false,\n    isShowYoNButtons: false,\n    question: '',\n    winners: [],\n    personPlace: null,\n  };\n\n  componentDidMount() {\n    this.subject = webSocket({\n        url: 'ws://localhost:8080',\n        deserializer: ({data}) => data\n      });\n    this.subject.subscribe(\n      msg => this.changeStateAccordingServerMessage(JSON.parse(msg))\n        , // Called whenever there is a message from the server.\n      err => console.log(err), // Called if at any point WebSocket API signals some kind of error.\n      () => console.log('complete') // Called when connection is closed (for whatever reason).\n    );\n  }\n\n  handleChange = (event) => {\n    console.log('event',event);\n\n    const item = event.currentTarget;\n    console.log('item', item.dataset.name);\n\n    this.setState({ [item.dataset.name]: event.target.value });\n  }\n\n  handleButtonClick = (event) => {\n    const {opponentName, theme, step, question, isActive, isShowYoNButtons} = this.state;\n    console.log(`sent to server ${opponentName}`);\n    if (step===STEPS.START) {\n      if(!theme){\n        console.log('1');\n        this.subject.next({step: STEPS.ACT, message: 'generateTheme' });\n      }\n      console.log('2');\n      this.setState({step: STEPS.ACT});\n      return;\n    };\n\n    if(step==STEPS.ACT){\n      console.log('3');\n    this.subject.next({step, message: opponentName });\n    this.setState({step: STEPS.PLAY, opponentName: ''});\n    return;\n    }\n    if (step===STEPS.PLAY && isActive){\n      console.log('4');\n      this.subject.next({step: STEPS.PLAY, message: question });\n      this.setState(prevState=>({question: '', playStory: prevState.playStory.concat({person: 'you', message: prevState.question, timestamp:Date.now()})}));\n    }\n    if (step===STEPS.PLAY && isShowYoNButtons){\n      console.log('5');\n      console.log('event.currentTarget.dataset.name', event.currentTarget.dataset.name);\n      const newMessage = event.currentTarget.dataset.name;\n      this.subject.next({step: STEPS.PLAY, message: newMessage });\n      this.setState(prevState=>({isShowYoNButtons: false, playStory: prevState.playStory.concat({person: 'you', message: newMessage, timestamp:Date.now()})}));\n    }\n\n  }\n\n  createPlayStory = () => {\n  const {playStory} = this.state;\n  return [...playStory].reverse();\n  }\n\n  createStepMessage = () => {\n    const {step, actions, numberOfPlayers} = this.state;\n    console.log('here');\n    if (actions){\n      return actions\n    }\n    if(step===STEPS.START && numberOfPlayers<2) {\n      return ACTION_MESSAGES.NOT_ENOUGH_PLAYERS\n    }\n    if (step===STEPS.START) {\n      return ACTION_MESSAGES.START\n    }\n    if (step===STEPS.PLAY && !actions){\n      return ACTION_MESSAGES.WAIT_START\n    }\n  }\n\n  changeStateAccordingServerMessage = (serverMsg) => {\n    console.log('here change states');\n    console.log('serverMSG', serverMsg);\n\n    const {type, message} = serverMsg;\n\n    if (type===TYPES.GENERAL) {\n    this.setState({...message, isShowYoNButtons: message.actions===ACTION_MESSAGES.ANSWER});\n    }\n    if (type===TYPES.ADDITIONAL){\n    const {playStory} = this.state;\n    console.log('message', message);\n     const newPlayStory =  playStory.concat({...message});\n     this.setState({playStory:newPlayStory});\n     console.log('newPlayStory', newPlayStory);\n    }\n    if(type===TYPES.FINAL){\n      const {winners} = this.state;\n    console.log('message in Final', message);\n    this.setState({\n      winners:winners.concat(JSON.parse(message.placeRating)),\n      personPlace: message.personPlace,\n      step: STEPS.END});\n    }\n  }\n\n  componentWillUnmount() {\n    console.log('unmount');\n    this.subject.complete();\n  }\n\n\n  render() {\n    const { theme, step, opponentName, personPlace, numberOfPlayers, isShowYoNButtons,isActive, question, winners } = this.state;\n    const { children } = this.props;\n    const {handleChange, handleButtonClick} = this;\n    return children({\n      theme,\n      step,\n      playStory: this.createPlayStory(),\n      actions: this.createStepMessage(),\n      opponentName,\n      handleChange,\n      numberOfPlayers,\n      handleButtonClick,\n      isActive,\n      question,\n      isShowYoNButtons,\n      winners,\n      personPlace\n    });\n  }\n}\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Button } from 'reactstrap';\n\nexport const InputBlock = ({isStepAct, isDisabled, inputValue, inputName, handleInputChange, onButtonClick})=>(\n  <div className=\"pt-3 px-3 px-sm-5\">\n      <label htmlFor={inputName}>{isStepAct ? <span className=\"pr-3\">Make a nickname for your opponent</span>:''}<input data-name={inputName} className=\"my-2 mx-2 text-left\" type=\"text\" name={inputName} value={inputValue} onChange={handleInputChange}/></label>\n      <Button disabled={isDisabled} className=\"app-button my-4\" onClick={onButtonClick} outline >\n         {isStepAct?'Apply': 'Ask'}\n      </Button>\n  </div>\n)\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Button } from 'reactstrap';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport { withCoreComponent } from '../../hocs/with-core-component';\nimport { ConsignmentWhoYouAreCore } from '../../core/consignment-who-you-are/consignment-who-you-are';\nimport { Main } from '../main/main';\nimport { STEPS } from '../../constants';\nimport { InputBlock } from './input-block/input-block';\nimport './consignment-who-you-are.scss';\n\n\n\nconst ConsignmentWhoYouAreUI = ({\n  step,\n  theme,\n  playStory,\n  actions,\n  isActive,\n  question,\n  opponentName,\n  numberOfPlayers,\n  isShowYoNButtons,\n  handleChange,\n  handleButtonClick,\n  winners,\n  personPlace\n}) => (\n  <Fragment>\n    <Main\n      className='bg-yellowgreen flex-column justify-content-between'\n    >\n      <Link className=\"text-white\" to=\"/\">\n        go home\n      </Link>\n      <div className=\"pb-4 px-2\">\n       {step!==STEPS.START && <div className=\"font-weight-bold\">Theme: {theme}</div>}\n        <div className=\"\">{numberOfPlayers ? <span>Number of players: {numberOfPlayers}</span> : <span>The game has already begun, try again later</span>}</div>\n\n        <div>\n          Guess who you are. Ask questions that can be answered “yes” or “no” to understand what nickname your opponent came up with for you\n        </div>\n      </div>\n    </Main>\n    <div className=\"text-white py-3 info-board position-relative\">{actions}</div>\n    <div className=\"bg-dark text-white flex-grow-1 d-flex flex-column w-100 pb-5 overflow-auto\">\n      <div className=\"mx-auto chat-board pt-4 px-3\">\n\n        {step===STEPS.START &&\n            <Fragment>\n              <Button disabled={numberOfPlayers<2} className=\"app-button my-4\" onClick={handleButtonClick} outline >\n              participate in the game\n              </Button>\n            </Fragment>\n        }\n        {step===STEPS.ACT &&\n          <InputBlock\n          isStepAct={true}\n          isDisabled={opponentName===''}\n          inputValue={opponentName}\n          inputName='opponentName'\n          handleInputChange={handleChange}\n          onButtonClick={handleButtonClick}\n          />\n        }\n        {step===STEPS.PLAY && isActive &&\n          <InputBlock\n          isStepAct={false}\n          isDisabled={question===''}\n          inputValue={question}\n          inputName='question'\n          handleInputChange={handleChange}\n          onButtonClick={handleButtonClick}\n          />\n        }\n        {step===STEPS.PLAY && playStory.map(({timestamp, person, message}, index) => (\n          <Fragment>\n          {index===0 &&\n          <div key={timestamp} className={classNames(\"pt-3 text-left\")}>\n            <div className=\"d-flex flex-nowrap flex-grow-1 align-items-center\">\n              <div>\n                <span className=\"pr-2 font-weight-bold\">{person}</span>\n                <span className=\"text-muted\">{moment(timestamp).format('LTS')}</span>\n              </div>\n            {step===STEPS.PLAY && isShowYoNButtons && !isActive &&\n            <div className=\"flex-shrink-0 py-2\">\n              <Button data-name=\"yes\" className=\"mx-3 bool-button\" onClick={handleButtonClick} outline>yes</Button>\n              <Button data-name=\"no\" className=\"bool-button\" onClick={handleButtonClick} outline>no</Button>\n            </div>\n            }\n            </div>\n          <div className=\"\">{message}</div>\n          </div>\n          }\n          {index!==0 &&\n          <div key={timestamp} className=\"pt-3 text-left\">\n            <div><span className=\"pr-2 font-weight-bold\">{person}</span><span className=\"text-muted\">{moment(timestamp).format('LTS')}</span></div>\n            <div className=\"\">{message}</div>\n          </div>\n          }\n          </Fragment>\n        ))}\n        {step===STEPS.END && winners.map((el,ind)=>(\n          <div key={ind}>\n            <div className={classNames({'font-weight-bold': personPlace!==null && ind===personPlace}, 'text-left d-flex')}>\n              <div className=\"pr-2 rating-index\">{ind+1} &#45;</div>\n              <span>{el}</span>\n              {personPlace!==null && ind===personPlace && <span>&#45; you</span>}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n\n  </Fragment>\n);\n\nConsignmentWhoYouAreUI.propTypes = {\n  step: PropTypes.number.isRequired,\n  numberOfPlayers: PropTypes.number.isRequired,\n  theme: PropTypes.string.isRequired,\n  opponentName: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleButtonClick: PropTypes.func.isRequired,\n};\n\nexport const ConsignmentWhoYouAre = withCoreComponent(ConsignmentWhoYouAreCore, ConsignmentWhoYouAreUI);\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'reactstrap';\nimport { Main } from '../../components/main/main';\nimport avocado from '../../components/icons/avocado.svg';\nimport tomato from '../../components/icons/tomato.svg';\nimport { HeadHelmet } from '../../components/head-helmet/head-helmet';\nimport { PAGE_NAMES } from '../../constants';\n\nimport './page-not-found.scss';\n\nexport const PageNotFound = () => (\n  <Fragment>\n    <HeadHelmet page={PAGE_NAMES.PAGE_NOT_FOUND} />\n    <Main className=\"page-not-found flex-column justify-content-center vh-100\">\n      <span className=\"px-4 app-link-yellowgreen\">not found page</span>\n      <div className=\"text-white\">\n        <img src={avocado} className=\"app-logo-small py-4 px-1\" alt=\"avocado\" />\n        <Button className=\"app-button my-4 mx-4\" to=\"/\" outline tag={Link}>\n          Go home\n        </Button>\n        <img src={tomato} className=\"app-logo-small py-4 px-1\" alt=\"tomato\" />\n      </div>\n    </Main>\n  </Fragment>\n);\n\nexport default PageNotFound;\n","import { PAGE_NAMES } from './constants';\nimport { Home } from './pages/home/home';\nimport { GameTomatoAvocado } from './pages/game-tomato-avocado/game-tomato-avocado';\nimport { GameWhoYouAre } from './pages/game-who-you-are/game-who-you-are';\nimport { PageNotFound } from './pages/page-not-found/page-not-found';\n\nexport const routes = [\n  {\n    path: '/',\n    exact: true,\n    component: Home,\n    page: PAGE_NAMES.HOME\n  },\n  {\n    path: '/game-tomato-avocado',\n    exact: true,\n    noFooter: true,\n    component: GameTomatoAvocado,\n    page: PAGE_NAMES.GAME_TOMATO_AVOCADO\n  },\n  {\n    path: '/game-who-you-are',\n    exact: true,\n    noFooter: true,\n    component: GameWhoYouAre,\n    page: PAGE_NAMES.GAME_WHO_YOU_ARE\n  },\n  {\n    path: '*',\n    component: PageNotFound,\n    page: PAGE_NAMES.PAGE_NOT_FOUND\n  }\n];\n","import React, { Fragment } from 'react';\nimport { HeadHelmet } from '../../components/head-helmet/head-helmet';\nimport { ConsignmentTomatoAvocado } from '../../components/consignment-tomato-avocado/consignment-tomato-avocado';\nimport { PAGE_NAMES } from '../../constants';\n\nexport const GameTomatoAvocado = () => (\n  <Fragment>\n    <HeadHelmet page={PAGE_NAMES.GAME_TOMATO_AVOCADO} />\n    <ConsignmentTomatoAvocado />\n  </Fragment>\n);\n","import React, { Fragment } from 'react';\nimport { HeadHelmet } from '../../components/head-helmet/head-helmet';\nimport {ConsignmentWhoYouAre} from '../../components/consignment-who-you-are/consignment-who-you-are'\nimport { PAGE_NAMES } from '../../constants';\n\nexport const GameWhoYouAre = () => (\n  <Fragment>\n    <HeadHelmet page={PAGE_NAMES.GAME_WHO_YOU_ARE} />\n    <ConsignmentWhoYouAre/>\n  </Fragment>\n);\n","import React, { Fragment } from 'react';\nimport { renderRoutes } from 'react-router-config';\nimport { Switch } from 'react-router-dom';\nimport { routes } from './routes';\n\nimport './app.scss';\n\nconst App = () => (\n  <Fragment>\n    <div className=\"app d-flex flex-column justify-content-between vh-100\">\n      <Switch>{renderRoutes(routes)}</Switch>\n    </div>\n  </Fragment>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './app';\nimport { HelmetProvider } from 'react-helmet-async';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss';\n\nReactDOM.render(\n  <HelmetProvider>\n    <BrowserRouter basename=\"/AwesomeProject\">\n      <App />\n    </BrowserRouter>\n  </HelmetProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}